apiVersion: v1
kind: Namespace
metadata:
  name: linkerd-ingress
  labels:
    linkerd.io/inject: enabled
---
# Linkerd Ingress Gateway Service
apiVersion: v1
kind: Service
metadata:
  name: linkerd-ingress-gateway
  namespace: linkerd-ingress
  annotations:
    linkerd.io/inject: enabled
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: linkerd-ingress-gateway
---
# Linkerd Ingress Gateway Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: linkerd-ingress-gateway
  namespace: linkerd-ingress
  labels:
    app: linkerd-ingress-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: linkerd-ingress-gateway
  template:
    metadata:
      labels:
        app: linkerd-ingress-gateway
      annotations:
        linkerd.io/inject: enabled
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
---
# Nginx ConfigMap for routing to ArgoCD
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: linkerd-ingress
data:
  default.conf: |
    server {
        listen 8080;
        location /argocd {
            proxy_pass http://argocd-server.argocd.svc.cluster.local:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location / {
            return 404;
        }
    }
---
# ALB Ingress pointing to Linkerd Ingress Gateway
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: linkerd-ingress
  namespace: linkerd-ingress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/healthcheck-path: /argocd
    alb.ingress.kubernetes.io/healthcheck-port: "8080"
    alb.ingress.kubernetes.io/success-codes: "200,302"
    alb.ingress.kubernetes.io/group.name: linkerd
    alb.ingress.kubernetes.io/group.order: "1"
spec:
  rules:
  - host: argocd.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: linkerd-ingress-gateway
            port:
              number: 80 